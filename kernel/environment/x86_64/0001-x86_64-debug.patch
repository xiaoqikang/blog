From c4aed9dd76647c926f93e9a792e22323c4584870 Mon Sep 17 00:00:00 2001
From: ChenXiaoSong <chenxiaosongemail@foxmail.com>
Date: Sat, 14 May 2022 18:23:13 +0800
Subject: [PATCH] x86_64: debug

gcc build with -Og.
Revert "x86/unwind/orc: Don't skip the first frame for inactive tasks".

Signed-off-by: ChenXiaoSong <chenxiaosongemail@foxmail.com>
---
 Makefile                            | 8 +-------
 arch/x86/kernel/unwind_orc.c        | 2 +-
 include/linux/compiler_attributes.h | 2 +-
 3 files changed, 3 insertions(+), 9 deletions(-)

diff --git a/Makefile b/Makefile
index c3ec1ea42379..13349ed5abe0 100644
--- a/Makefile
+++ b/Makefile
@@ -752,13 +752,7 @@ KBUILD_CFLAGS	+= $(call cc-disable-warning, format-truncation)
 KBUILD_CFLAGS	+= $(call cc-disable-warning, format-overflow)
 KBUILD_CFLAGS	+= $(call cc-disable-warning, address-of-packed-member)
 
-ifdef CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE
-KBUILD_CFLAGS += -O2
-else ifdef CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3
-KBUILD_CFLAGS += -O3
-else ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
-KBUILD_CFLAGS += -Os
-endif
+KBUILD_CFLAGS += -Og
 
 # Tell gcc to never replace conditional load with a non-conditional one
 ifdef CONFIG_CC_IS_GCC
diff --git a/arch/x86/kernel/unwind_orc.c b/arch/x86/kernel/unwind_orc.c
index 794fdef2501a..c30d21c80913 100644
--- a/arch/x86/kernel/unwind_orc.c
+++ b/arch/x86/kernel/unwind_orc.c
@@ -708,7 +708,7 @@ void __unwind_start(struct unwind_state *state, struct task_struct *task,
 	/* Otherwise, skip ahead to the user-specified starting frame: */
 	while (!unwind_done(state) &&
 	       (!on_stack(&state->stack_info, first_frame, sizeof(long)) ||
-			state->sp < (unsigned long)first_frame))
+			state->sp <= (unsigned long)first_frame))
 		unwind_next_frame(state);
 
 	return;
diff --git a/include/linux/compiler_attributes.h b/include/linux/compiler_attributes.h
index 445e80517cab..2725f7fc8e09 100644
--- a/include/linux/compiler_attributes.h
+++ b/include/linux/compiler_attributes.h
@@ -143,7 +143,7 @@
  *   gcc: https://gcc.gnu.org/onlinedocs/gcc/Common-Function-Attributes.html#index-error-function-attribute
  */
 #if __has_attribute(__error__)
-# define __compiletime_error(msg)       __attribute__((__error__(msg)))
+# define __compiletime_error(msg) //       __attribute__((__error__(msg)))
 #else
 # define __compiletime_error(msg)
 #endif
-- 
2.25.1

